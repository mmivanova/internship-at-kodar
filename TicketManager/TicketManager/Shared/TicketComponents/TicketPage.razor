@page "/"
@page "/tickets"
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Http
@using TicketManager.Core.Services.TicketService
@using TicketManager.Infrastructure.Domain.Entities

@inject ITicketService _ticketService
@inject UserManager<AppUser> _userManager
@inject NavigationManager _navigationManager
@inject IHttpContextAccessor _contextAccessor

<h3>Tickets</h3>
<br>
<AuthorizeView Roles="Administrator, Developer">
    <a href="ticket/add" class="btn btn-primary active" role="button">New ticket</a>
</AuthorizeView>
<br/>
<br/>
<table class="table table-striped table-hover">
    <thead>
    <tr>
        <th scope="col">Code</th>
        <th scope="col">Name</th>
        <th scope="col">Intended for</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var ticket in _tickets)
    {
        <tr>
            <th scope="row">@ticket.Id</th>
            <td>@ticket.Name</td>
            <td>@ticket.ReceiverId.ToString()</td>
            <td>
                <button type="button" @onclick="() => OpenDetailedTicketPage(ticket.Id)">Open ticket</button>
            </td>
            <AuthorizeView Roles="Administrator">
                <td>
                    <button type="button" @onclick="() => DeleteTicket(ticket.Id)">Delete</button>
                </td>
            </AuthorizeView>
        </tr>
    }
    </tbody>
</table>


@code {
    private IEnumerable<Ticket> _tickets;
    private AppUser _user;

    protected override void OnInitialized()
    {
        if (_contextAccessor.HttpContext != null) _user = _userManager.GetUserAsync(_contextAccessor.HttpContext.User).Result;
        _tickets = _ticketService.GetTicketsForUser(_user);
    }

    private void DeleteTicket(int id)
    {
        _ticketService.Delete(id);
        _navigationManager.NavigateTo("/tickets", true);
    }

    private void OpenDetailedTicketPage(int id)
    {
        _navigationManager.NavigateTo($"/ticket/{id}", true);
    }

}